2022-01-31 21:16:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE 8[*](ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT(10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE 8[*](ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT(10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE 8(ID INT PRIMARY KEY,
                                      TYPE VARCHAR(500),
                                      CLASS VARCHAR(150),
                                      CAT1_FIELD INT(10),
                                      CAT1_CAMERAL INT(10),
                                      CAT2_FIELD INT(10),
                                      CAT2_CAMERAL INT(10),
                                      CAT3_FIELD INT(10),
                                      CAT3_CAMERAL INT(10),
) [42001-206]
2022-01-31 21:16:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO 8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);\000d\000aINSERT INTO 8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');\000d\000aINSERT INTO 8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');\000d\000aINSERT INTO 8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485[*]');"
Syntax error in SQL statement "INSERT INTO 8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);\000d\000aINSERT INTO 8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');\000d\000aINSERT INTO 8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');\000d\000aINSERT INTO 8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485[*]');"; SQL statement:
INSERT INTO 8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);
INSERT INTO 8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');
INSERT INTO 8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');
INSERT INTO 8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485'); [42000-206]
2022-01-31 21:17:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T8(ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT([*]10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; ожидалось "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"
Syntax error in SQL statement "CREATE TABLE T8(ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT([*]10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; expected "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"; SQL statement:
CREATE TABLE T8(ID INT PRIMARY KEY,
                                      TYPE VARCHAR(500),
                                      CLASS VARCHAR(150),
                                      CAT1_FIELD INT(10),
                                      CAT1_CAMERAL INT(10),
                                      CAT2_FIELD INT(10),
                                      CAT2_CAMERAL INT(10),
                                      CAT3_FIELD INT(10),
                                      CAT3_CAMERAL INT(10),
) [42001-206]
2022-01-31 21:17:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO 8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);\000d\000aINSERT INTO 8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');\000d\000aINSERT INTO 8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');\000d\000aINSERT INTO 8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485[*]');"
Syntax error in SQL statement "INSERT INTO 8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);\000d\000aINSERT INTO 8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');\000d\000aINSERT INTO 8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');\000d\000aINSERT INTO 8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485[*]');"; SQL statement:
INSERT INTO 8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);
INSERT INTO 8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');
INSERT INTO 8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');
INSERT INTO 8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485'); [42000-206]
2022-01-31 21:18:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T8(ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT([*]10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; ожидалось "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"
Syntax error in SQL statement "CREATE TABLE T8(ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT([*]10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; expected "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"; SQL statement:
CREATE TABLE T8(ID INT PRIMARY KEY,
                                      TYPE VARCHAR(500),
                                      CLASS VARCHAR(150),
                                      CAT1_FIELD INT(10),
                                      CAT1_CAMERAL INT(10),
                                      CAT2_FIELD INT(10),
                                      CAT2_CAMERAL INT(10),
                                      CAT3_FIELD INT(10),
                                      CAT3_CAMERAL INT(10),
) [42001-206]
2022-01-31 21:18:33 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T8(ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT([*]10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; ожидалось "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"
Syntax error in SQL statement "CREATE TABLE T8(ID INT PRIMARY KEY,\000d\000a                                      TYPE VARCHAR(500),\000d\000a                                      CLASS VARCHAR(150),\000d\000a                                      CAT1_FIELD INT([*]10),\000d\000a                                      CAT1_CAMERAL INT(10),\000d\000a                                      CAT2_FIELD INT(10),\000d\000a                                      CAT2_CAMERAL INT(10),\000d\000a                                      CAT3_FIELD INT(10),\000d\000a                                      CAT3_CAMERAL INT(10),\000d\000a)"; expected "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"; SQL statement:
CREATE TABLE T8(ID INT PRIMARY KEY,
                                      TYPE VARCHAR(500),
                                      CLASS VARCHAR(150),
                                      CAT1_FIELD INT(10),
                                      CAT1_CAMERAL INT(10),
                                      CAT2_FIELD INT(10),
                                      CAT2_CAMERAL INT(10),
                                      CAT3_FIELD INT(10),
                                      CAT3_CAMERAL INT(10),
) [42001-206]
2022-01-31 21:19:36 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T8(ID INT PRIMARY KEY, TYPE VARCHAR(500), CLASS VARCHAR(150), CAT1_FIELD INT([*]10),                CAT1_CAMERAL INT(10), CAT2_FIELD INT(10), CAT2_CAMERAL INT(10), CAT3_FIELD INT(10),                                    CAT3_CAMERAL INT(10),\000d\000a)"; ожидалось "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"
Syntax error in SQL statement "CREATE TABLE T8(ID INT PRIMARY KEY, TYPE VARCHAR(500), CLASS VARCHAR(150), CAT1_FIELD INT([*]10),                CAT1_CAMERAL INT(10), CAT2_FIELD INT(10), CAT2_CAMERAL INT(10), CAT3_FIELD INT(10),                                    CAT3_CAMERAL INT(10),\000d\000a)"; expected "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"; SQL statement:
CREATE TABLE T8(ID INT PRIMARY KEY, TYPE VARCHAR(500), CLASS VARCHAR(150), CAT1_FIELD INT(10),                CAT1_CAMERAL INT(10), CAT2_FIELD INT(10), CAT2_CAMERAL INT(10), CAT3_FIELD INT(10),                                    CAT3_CAMERAL INT(10),
) [42001-206]
2022-01-31 21:20:29 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T8(ID INT PRIMARY KEY, \000d\000aTYPE VARCHAR(500), \000d\000aCLASS VARCHAR(150), \000d\000aCAT1_FIELD INT([*]10),\000d\000aCAT1_CAMERAL INT(10), \000d\000aCAT2_FIELD INT(10), \000d\000aCAT2_CAMERAL INT(10), \000d\000aCAT3_FIELD INT(10), CAT3_CAMERAL INT(10)\000d\000a)"; ожидалось "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"
Syntax error in SQL statement "CREATE TABLE T8(ID INT PRIMARY KEY, \000d\000aTYPE VARCHAR(500), \000d\000aCLASS VARCHAR(150), \000d\000aCAT1_FIELD INT([*]10),\000d\000aCAT1_CAMERAL INT(10), \000d\000aCAT2_FIELD INT(10), \000d\000aCAT2_CAMERAL INT(10), \000d\000aCAT3_FIELD INT(10), CAT3_CAMERAL INT(10)\000d\000a)"; expected "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"; SQL statement:
CREATE TABLE T8(ID INT PRIMARY KEY, 
TYPE VARCHAR(500), 
CLASS VARCHAR(150), 
CAT1_FIELD INT(10),
CAT1_CAMERAL INT(10), 
CAT2_FIELD INT(10), 
CAT2_CAMERAL INT(10), 
CAT3_FIELD INT(10), CAT3_CAMERAL INT(10)
) [42001-206]
2022-01-31 21:21:44 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T8(ID INT PRIMARY KEY, \000d\000aTYPE VARCHAR(500),CLASS VARCHAR(150),CAT1_FIELD INT([*]10),CAT1_CAMERAL INT(10),CAT2_FIELD INT(10),CAT2_CAMERAL INT(10),CAT3_FIELD INT(10),CAT3_CAMERAL INT(10))"; ожидалось "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"
Syntax error in SQL statement "CREATE TABLE T8(ID INT PRIMARY KEY, \000d\000aTYPE VARCHAR(500),CLASS VARCHAR(150),CAT1_FIELD INT([*]10),CAT1_CAMERAL INT(10),CAT2_FIELD INT(10),CAT2_CAMERAL INT(10),CAT3_FIELD INT(10),CAT3_CAMERAL INT(10))"; expected "ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )"; SQL statement:
CREATE TABLE T8(ID INT PRIMARY KEY, 
TYPE VARCHAR(500),CLASS VARCHAR(150),CAT1_FIELD INT(10),CAT1_CAMERAL INT(10),CAT2_FIELD INT(10),CAT2_CAMERAL INT(10),CAT3_FIELD INT(10),CAT3_CAMERAL INT(10)) [42001-206]
2022-01-31 21:24:14 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);\000d\000aINSERT INTO T8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');\000d\000aINSERT INTO T8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');\000d\000aINSERT INTO t8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485[*]');"
Syntax error in SQL statement "INSERT INTO T8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);\000d\000aINSERT INTO T8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');\000d\000aINSERT INTO T8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');\000d\000aINSERT INTO t8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485[*]');"; SQL statement:
INSERT INTO T8 VALUES(1, 'Плановая опорная сеть', '4 класс','12740', '4979', '14423', '5651', '16640', '6484);
INSERT INTO T8 VALUES(2, 'Плановая опорная сеть', '1 разряд', '8407', '3313', '9172', '3599', '10008', '3912');
INSERT INTO T8 VALUES(3, 'Плановая опорная сеть', '2 разряд', '5983', '2360', '6426', '2538', '6897', '2705');
INSERT INTO t8 VALUES(4, 'Высотная опорная сеть', 'IV класс', '1418', '378', '1897', '428', '2463', '485'); [42000-206]
2022-01-31 21:25:14 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T8 VALUES(1, ПЛАНОВАЯ ОПОРНАЯ[*] СЕТЬ, 4 КЛАСС,12740, 4979, 14423, 5651, 16640, 6484)"; ожидалось "(, {, ], :=, AT, FORMAT, ,, %, ;, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ., )"
Syntax error in SQL statement "INSERT INTO T8 VALUES(1, ПЛАНОВАЯ ОПОРНАЯ[*] СЕТЬ, 4 КЛАСС,12740, 4979, 14423, 5651, 16640, 6484)"; expected "(, {, ], :=, AT, FORMAT, ,, %, ;, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ., )"; SQL statement:
INSERT INTO T8 VALUES(1, Плановая опорная сеть, 4 класс,12740, 4979, 14423, 5651, 16640, 6484) [42001-206]
2022-01-31 21:25:44 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T8 VALUES(1, ПЛАНОВАЯ ОПОРНАЯ[*] СЕТЬ, '4 класс','12740', '4979', '14423', '5651', '16640', '6484')"; ожидалось "(, {, ], :=, AT, FORMAT, ,, %, ;, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ., )"
Syntax error in SQL statement "INSERT INTO T8 VALUES(1, ПЛАНОВАЯ ОПОРНАЯ[*] СЕТЬ, '4 класс','12740', '4979', '14423', '5651', '16640', '6484')"; expected "(, {, ], :=, AT, FORMAT, ,, %, ;, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ., )"; SQL statement:
INSERT INTO T8 VALUES(1, Плановая опорная сеть, '4 класс','12740', '4979', '14423', '5651', '16640', '6484') [42001-206]
2022-01-31 21:26:21 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T8 VALUES(1, ПЛАНОВАЯ ОПОРНАЯ[*] СЕТЬ, '4 класс','12740', '4979', '14423', '5651', '16640', '6484')"; ожидалось "(, {, ], :=, AT, FORMAT, ,, %, ;, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ., )"
Syntax error in SQL statement "INSERT INTO T8 VALUES(1, ПЛАНОВАЯ ОПОРНАЯ[*] СЕТЬ, '4 класс','12740', '4979', '14423', '5651', '16640', '6484')"; expected "(, {, ], :=, AT, FORMAT, ,, %, ;, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ., )"; SQL statement:
INSERT INTO T8 VALUES(1, Плановая опорная сеть, '4 класс','12740', '4979', '14423', '5651', '16640', '6484') [42001-206]
2022-01-31 21:41:50 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE T9(ID INT PRIMARY KEY, \000d\000aSCALE VARCHAR(500),\000d\000aCATEGORY VARCHAR(10),\000d\000aSECTION_HEIGHT DOUBLE,\000d\000aTYPE_UNBUILT_FIELD INT,\000d\000aTYPE_UNBUILT_CAMERAL INT,\000d\000aTYPE_BUILT_FIELD INT,\000d\000aTYPE_BUILT_CAMERAL INT,\000d\000aTYPE_INDUSTRIAL_FIELD INT,\000d\000aTYPE_INDUSTRIAL_CAMERAL INT,\000d\000a)[*]"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE T9(ID INT PRIMARY KEY, \000d\000aSCALE VARCHAR(500),\000d\000aCATEGORY VARCHAR(10),\000d\000aSECTION_HEIGHT DOUBLE,\000d\000aTYPE_UNBUILT_FIELD INT,\000d\000aTYPE_UNBUILT_CAMERAL INT,\000d\000aTYPE_BUILT_FIELD INT,\000d\000aTYPE_BUILT_CAMERAL INT,\000d\000aTYPE_INDUSTRIAL_FIELD INT,\000d\000aTYPE_INDUSTRIAL_CAMERAL INT,\000d\000a)[*]"; expected "identifier"; SQL statement:
CREATE TABLE T9(ID INT PRIMARY KEY, 
SCALE VARCHAR(500),
CATEGORY VARCHAR(10),
SECTION_HEIGHT DOUBLE,
TYPE_UNBUILT_FIELD INT,
TYPE_UNBUILT_CAMERAL INT,
TYPE_BUILT_FIELD INT,
TYPE_BUILT_CAMERAL INT,
TYPE_INDUSTRIAL_FIELD INT,
TYPE_INDUSTRIAL_CAMERAL INT,
) [42001-206]
2022-01-31 23:03:30 jdbc[5]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:128)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)

org.h2.message.DbException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:185)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 13 more
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,25' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,25' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(1, '1:500', 'I', '0,25', '1989', '493', '2578', '870', '3352', '1436') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,25' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,25' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(2, '1:500', 'II', '0,25', '2578', '700', '3481', '1269', '4524', '2093') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,25' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,25' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(3, '1:500', 'III', '0,25', '3402', '859', '4991', '1692', '6488', '2793') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(4, '1:500', 'I', '0,5', '1723', '418', '2233', '737', '3007', '1268') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(5, '1:500', 'II', '0,5', '2432', '589', '3284', '1067', '4632', '1938') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(6, '1:500', 'III', '0,5', '3288', '791', '4824', '1559', '6195', '2558') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"
Data conversion error converting "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"; SQL statement:
INSERT INTO T9 VALUES(7, '1:500', 'I', '1', '1460', '398', '2043', '620', '', '') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"
Data conversion error converting "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"; SQL statement:
INSERT INTO T9 VALUES(8, '1:500', 'II', '1', '1965', '552', '3095', '939', '', '') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"
Data conversion error converting "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"; SQL statement:
INSERT INTO T9 VALUES(9, '1:500', 'III', '1', '2253', '711', '4591', '1408', '', '') [22018-206]
2022-01-31 23:03:39 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(10, '1:1000', 'I', '0,5', '936', '234', '1676', '543', '2429', '1011') [22018-206]
2022-01-31 23:04:22 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"
Data conversion error converting "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"; SQL statement:
INSERT INTO T9 VALUES(7, '1:500', 'I', '1', '1460', '398', '2043', '620', '', '') [22018-206]
2022-01-31 23:04:22 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"
Data conversion error converting "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"; SQL statement:
INSERT INTO T9 VALUES(8, '1:500', 'II', '1', '1965', '552', '3095', '939', '', '') [22018-206]
2022-01-31 23:04:22 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"
Data conversion error converting "'' (T9: ""TYPE_INDUSTRIAL_FIELD"" INTEGER)"; SQL statement:
INSERT INTO T9 VALUES(9, '1:500', 'III', '1', '2253', '711', '4591', '1408', '', '') [22018-206]
2022-01-31 23:13:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(11, '1:1000', 'II', '0,5', '1430', '343', '2258', '734', '3560', '1481') [22018-206]
2022-01-31 23:13:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(12, '1:1000', 'III', '0,5', '1984', '474', '3665', '1167', '5027', '2053') [22018-206]
2022-01-31 23:13:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(16, '1:2000', 'I', '0,5', '408', '91', '1366', '460', '1777', '759') [22018-206]
2022-01-31 23:13:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(17, '1:2000', 'II', '0,5', '804', '174', '2152', '700', '2796', '1288') [22018-206]
2022-01-31 23:13:57 jdbc[5]: exception
org.h2.jdbc.JdbcSQLDataException: Ошибка преобразования данных при конвертации "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"
Data conversion error converting "'0,5' (T9: ""SECTION_HEIGHT"" DOUBLE PRECISION)"; SQL statement:
INSERT INTO T9 VALUES(18, '1:2000', 'III', '0,5', '1796', '387', '3530', '1163', '4588', '1919') [22018-206]
2022-02-01 08:00:43 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T4 VALUES(1, '25-100', '14','11.5', '9.1', '4.5', '3.5', '2.8') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:00:43 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T4 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);\000d\000aINSERT INTO T4 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');\000d\000aINSERT INTO T4 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');\000d\000aINSERT INTO T4 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');\000d\000aINSERT INTO T4 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12[*]');"
Syntax error in SQL statement "INSERT INTO T4 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);\000d\000aINSERT INTO T4 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');\000d\000aINSERT INTO T4 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');\000d\000aINSERT INTO T4 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');\000d\000aINSERT INTO T4 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12[*]');"; SQL statement:
INSERT INTO T4 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);
INSERT INTO T4 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');
INSERT INTO T4 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');
INSERT INTO T4 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');
INSERT INTO T4 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12'); [42000-206]
2022-02-01 08:04:04 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T4 VALUES(1, '25-100', '14','11.5', '9.1', '4.5', '3.5', '2.8') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:04:30 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T4 VALUES(1, '25-100', '14', '11.5', '9.1', '4.5', '3.5', '2.8') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:06:42 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T5 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);\000d\000aINSERT INTO T5 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');\000d\000aINSERT INTO T5 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');\000d\000aINSERT INTO T5 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');\000d\000aINSERT INTO T5 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12[*]');"
Syntax error in SQL statement "INSERT INTO T5 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);\000d\000aINSERT INTO T5 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');\000d\000aINSERT INTO T5 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');\000d\000aINSERT INTO T5 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');\000d\000aINSERT INTO T5 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12[*]');"; SQL statement:
INSERT INTO T5 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);
INSERT INTO T5 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');
INSERT INTO T5 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');
INSERT INTO T5 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');
INSERT INTO T5 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12'); [42000-206]
2022-02-01 08:07:55 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "INSERT INTO T5 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);\000d\000aINSERT INTO T5 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');\000d\000aINSERT INTO T5 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');\000d\000aINSERT INTO T5 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');\000d\000aINSERT INTO T5 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12[*]');"
Syntax error in SQL statement "INSERT INTO T5 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);\000d\000aINSERT INTO T5 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');\000d\000aINSERT INTO T5 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');\000d\000aINSERT INTO T5 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');\000d\000aINSERT INTO T5 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12[*]');"; SQL statement:
INSERT INTO T5 VALUES(2, '100-300', '19.6', '15.4', '12.7', '6.2', '4.8', '3.6);
INSERT INTO T5 VALUES(3, '300-500', '25.2', '21', '16.8', '8.1', '6.3', '4.8');
INSERT INTO T5 VALUES(4, '500-1000', '30.8', '25.2', '19.6', '9.7', '7.3', '5.5');
INSERT INTO T5 VALUES(5, '1000-2000', '36.4', '32.2', '28', '13.2', '9.8', '7.3');
INSERT INTO T5 VALUES(6, '>2000', '-1', '39.2', '36.4', '20', '16', '12'); [42000-206]
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(1, 'ДО 25', '4%') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(2, '25 - 50', '1000+3% от стоим. изысканий, более 25 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(3, '50 - 100', '1750+2,5% то же 50 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(4, '100 - 500', '3250+2% " 100 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(5, '500 - 1000', '11250+1,5% " 500 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(6, '1000 - 2000', '18750+1,0% " 1000 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(7, '2000 - 5000', '28750+0,5% " 2000 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(8, '5000 - 10000', '43750+0,25% " 5000 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:27:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Неверное количество столбцов
Column count does not match; SQL statement:
INSERT INTO T58 VALUES(9, 'СВЫШЕ 10000', '56250+0,1% " 10000 тыс. р.') [21002-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.command.dml.Insert.prepare(Insert.java:295)
	at org.h2.command.Parser.prepareCommand(Parser.java:971)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:624)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:562)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1111)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1335)
	at org.h2.server.web.WebApp.query(WebApp.java:1133)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1099)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1086)
	at org.h2.server.web.WebThread.process(WebThread.java:178)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
2022-02-01 08:29:17 jdbc[6]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "T80" уже существует
Table "T80" already exists; SQL statement:
CREATE TABLE T80(ID INT PRIMARY KEY, ESTIMATED_COST_OF_SURVEYS VARCHAR(50), REGISTRATION_PRICE VARCHAR(50)) [42101-206]
2022-02-01 08:44:14 jdbc[10]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:128)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)

org.h2.message.DbException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:185)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 13 more
2022-02-01 08:47:51 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 62 more
2022-02-01 08:47:53 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 67 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 61 more
2022-02-01 08:53:48 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 62 more
2022-02-01 08:53:54 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 67 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 61 more
2022-02-01 08:55:00 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 62 more
2022-02-01 08:55:06 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 67 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:C:/Users/GeoJava/Downloads/smeta/db/db.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 61 more
2022-02-01 08:56:15 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	... 62 more
2022-02-01 08:56:15 database: opening C:/Users/GeoJava/Downloads/smeta/db/db
org.h2.message.DbException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 63 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 60 more
2022-02-01 08:56:21 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 67 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	... 61 more
2022-02-01 08:56:21 database: opening C:/Users/GeoJava/Downloads/smeta/db/db
org.h2.message.DbException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 62 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 59 more
2022-02-01 08:57:05 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:162)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:130)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:143)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:95)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:132)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:132)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 67 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	... 61 more
2022-02-01 08:57:05 database: opening C:/Users/GeoJava/Downloads/smeta/db/db
org.h2.message.DbException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:330)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:162)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:130)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:143)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:103)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:95)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:132)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:132)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 62 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 59 more
2022-02-01 08:57:11 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	... 62 more
2022-02-01 08:57:11 database: opening C:/Users/GeoJava/Downloads/smeta/db/db
org.h2.message.DbException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.iniz.smeta.SmetaApplication.main(SmetaApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Файл поврежден при чтении строки: null. Возможные решения: используйте утилиту восстановления (recovery tool)
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 63 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 60 more
2022-02-02 08:32:34 database: wrong user or password; user: "SA"
org.h2.message.DbException: Неверное имя пользователя или пароль
Wrong user name or password [28000-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:175)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Неверное имя пользователя или пароль
Wrong user name or password [28000-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:529)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 8 more
2022-02-02 08:32:36 database: wrong user or password; user: "SA"
org.h2.message.DbException: Неверное имя пользователя или пароль
Wrong user name or password [28000-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.engine.Engine.openSession(Engine.java:154)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:175)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLInvalidAuthorizationSpecException: Неверное имя пользователя или пароль
Wrong user name or password [28000-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:529)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 8 more
2022-02-02 11:16:13 jdbc[296]: null
org.h2.message.DbException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:185)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 13 more
2022-02-02 13:06:45 jdbc[657]: null
org.h2.message.DbException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:185)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 13 more
2022-02-02 14:54:43 jdbc[849]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:85)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:128)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)

org.h2.message.DbException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.message.DbException.get(DbException.java:192)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:185)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:127)
	at org.h2.util.JdbcUtils.getConnection(JdbcUtils.java:287)
	at org.h2.server.web.WebServer.getConnection(WebServer.java:785)
	at org.h2.server.web.WebApp.login(WebApp.java:1029)
	at org.h2.server.web.WebApp.process(WebApp.java:226)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebThread.process(WebThread.java:139)
	at org.h2.server.web.WebThread.run(WebThread.java:94)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: Незакрытое приложением соединение уничтожено сборщиком мусора
The connection was not closed by the application and is garbage collected [90018-206]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:697)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	... 13 more
